CREATE TABLE "publisher" (
	"publisher_id"	INTEGER NOT NULL UNIQUE,
	"publisher_name"	INTEGER NOT NULL UNIQUE,
	PRIMARY KEY("publisher_id")
);
CREATE TABLE "book_language" (
	"language_id"	INTEGER NOT NULL UNIQUE,
	"language_code"	TEXT NOT NULL UNIQUE,
	"language_name"	TEXT NOT NULL UNIQUE,
	PRIMARY KEY("language_id")
);
CREATE TABLE "author" (
	"author_id"	INTEGER NOT NULL UNIQUE,
	"author_name"	TEXT NOT NULL,
	"email" TEXT NOT NULL UNIQUE,
	"hashed_password" TEXT NOT NULL,
	PRIMARY KEY("author_id")
);
CREATE TABLE "book" (
	"book_id"	INTEGER NOT NULL UNIQUE,
	"title"	TEXT NOT NULL UNIQUE,
	"isbn"	TEXT NOT NULL UNIQUE,
	"language_id"	INTEGER NOT NULL,
	"num_pages"	INTEGER,
	"publication_date"	TEXT NOT NULL,
	"publisher_id"	INTEGER NOT NULL,
	PRIMARY KEY("book_id")
);
CREATE TABLE "book_author" (
	"book_id"	INTEGER NOT NULL UNIQUE,
	"author_id"	INTEGER NOT NULL,
	PRIMARY KEY("book_id","author_id"),
	FOREIGN KEY("book_id") REFERENCES "book"("book_id"),
	FOREIGN KEY("author_id") REFERENCES "author"("author_id")
);
CREATE TABLE "address_status" (
	"status_id"	INTEGER NOT NULL,
	"address_status"	TEXT NOT NULL,
	PRIMARY KEY("status_id")
);
CREATE TABLE "country" (
	"country_id"	INTEGER NOT NULL UNIQUE,
	"country_name"	TEXT NOT NULL UNIQUE,
	PRIMARY KEY("country_id")
);
CREATE TABLE "address" (
	"address_id"	INTEGER NOT NULL UNIQUE,
	"street_number"	TEXT NOT NULL,
	"street_name"	TEXT NOT NULL,
	"city"	TEXT NOT NULL,
	"country_id"	INTEGER NOT NULL,
	FOREIGN KEY("country_id") REFERENCES "country"("country_id"),
	PRIMARY KEY("address_id")
);
CREATE TABLE "customer" (
	"customer_id"	INTEGER NOT NULL UNIQUE,
	"first_name"	TEXT NOT NULL,
	"last_name"	TEXT NOT NULL,
	"email"	TEXT NOT NULL UNIQUE,
	"hashed_password"	TEXT NOT NULL,
	PRIMARY KEY("customer_id")
);
CREATE TABLE "customer_address" (
	"customer_id"	INTEGER NOT NULL,
	"address_id"	INTEGER NOT NULL,
	"status_id"	INTEGER NOT NULL,
	FOREIGN KEY("customer_id") REFERENCES "customer"("customer_id"),
	FOREIGN KEY("status_id") REFERENCES "address_status"("status_id"),
	FOREIGN KEY("address_id") REFERENCES "address"("address_id"),
	PRIMARY KEY("customer_id","address_id")
);
CREATE TABLE "order_status" (
	"status_id"	INTEGER NOT NULL UNIQUE,
	"status_value"	TEXT NOT NULL,
	PRIMARY KEY("status_id")
);
CREATE TABLE "shipping_method" (
	"method_id"	INTEGER NOT NULL UNIQUE,
	"method_name"	TEXT NOT NULL,
	"cost"	REAL NOT NULL,
	PRIMARY KEY("method_id")
);
CREATE TABLE "cust_order" (
	"order_id"	INTEGER NOT NULL UNIQUE,
	"order_date"	TEXT NOT NULL,
	"customer_id"	INTEGER NOT NULL,
	"shipping_method_id"	INTEGER NOT NULL,
	"dest_address_id"	INTEGER NOT NULL,
	FOREIGN KEY("shipping_method_id") REFERENCES "shipping_method"("method_id"),
	FOREIGN KEY("customer_id") REFERENCES "customer"("customer_id"),
	PRIMARY KEY("order_id"),
	FOREIGN KEY("dest_address_id") REFERENCES "address"("address_id")
);
CREATE TABLE "order_history" (
	"history_id"	INTEGER NOT NULL UNIQUE,
	"order_id"	INTEGER NOT NULL,
	"status_id"	INTEGER NOT NULL,
	"status_date"	TEXT NOT NULL,
	FOREIGN KEY("order_id") REFERENCES "cust_order"("order_id"),
	FOREIGN KEY("status_id") REFERENCES "order_status"("status_id"),
	PRIMARY KEY("history_id")
);
CREATE TABLE "order_line" (
	"line_id"	INTEGER NOT NULL UNIQUE,
	"order_id"	INTEGER NOT NULL,
	"book_id"	INTEGER NOT NULL,
	"price"	REAL NOT NULL,
	PRIMARY KEY("line_id"),
	FOREIGN KEY("order_id") REFERENCES "cust_order"("order_id"),
	FOREIGN KEY("book_id") REFERENCES "book"("book_id")
);